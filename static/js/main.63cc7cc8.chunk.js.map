{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","onClickB","style","calculateWinner","squares","includes","winnerSquare","value","Board","i","this","onClickA","BoardRows","counter","push","toString","j","renderSquare","React","Component","Game","state","history","Array","fill","vector","stepNumber","xIsNext","selected","isToggleOn","handleClickOfSort","bind","row","slice","length","getVector","setState","concat","step","status","current","winner","accending","moves","map","move","desc","jumpTo","some","el","handleClick","reverse","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63cc7cc8.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  //debugger\r\n  return (\r\n    <button className=\"square\" onClick={props.onClickB} style={{ 'color': calculateWinner(props.squares).includes(props.winnerSquare) ? 'red' : 'blue' }}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n  renderSquare(i) {\r\n    \r\n    return <Square\r\n      value={this.props.squares[i]}\r\n      onClickB={() => this.props.onClickA(i)}\r\n      key={i}\r\n      winnerSquare={i}\r\n      squares={this.props.squares}\r\n    />;\r\n  }\r\n\r\n  render() {\r\n\r\n    const BoardRows = [];\r\n    let counter = 0;\r\n\r\n    for (var i = 0; i < 3; i++) {\r\n      BoardRows.push(<div className=\"board-row\" key={i.toString() + ' row parent'} />)\r\n      for (var j = 0; j < 3; j++) {\r\n        BoardRows.push(this.renderSquare(counter));\r\n        counter++;\r\n\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {BoardRows}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n        vector: null,\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      selected: false,\r\n      isToggleOn: true,\r\n    };\r\n\r\n    this.handleClickOfSort = this.handleClickOfSort.bind(this);\r\n  }\r\n\r\n  getVector(i) {\r\n    let col;\r\n    let row;\r\n    if (i === 0 || i === 3 || i === 6) {\r\n      col = 1;\r\n    } else if (i === 1 || i === 4 || i === 7) {\r\n      col = 2;\r\n    } else {\r\n      col = 3;\r\n    }\r\n    if (i === 0 || i === 1 || i === 2) {\r\n      row = 1;\r\n    } else if (i === 3 || i === 4 || i === 5) {\r\n      row = 2;\r\n    } else {\r\n      row = 3;\r\n    }\r\n    return `(${col}, ${row})`;\r\n  }\r\n\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    const vector = this.getVector(i);\r\n    //debugger\r\n\r\n    if (calculateWinner(squares).length || squares[i]) {\r\n      return;\r\n    }\r\n\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n        vector: vector,\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n      selected: history.length,\r\n    });\r\n\r\n\r\n  }\r\n\r\n  handleClickOfSort() {\r\n    this.setState(state => ({\r\n      isToggleOn: !state.isToggleOn\r\n    }));\r\n  }\r\n\r\n  jumpTo(step) {\r\n\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n      selected: step,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares).length ? current.squares[calculateWinner(current.squares)[0]] : null;\r\n    const accending = this.state.isToggleOn;\r\n\r\n    //debugger\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        `Go to move #${move} ${history[move].vector}` :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)} style={{ 'fontWeight': this.state.selected === move ? 'bold' : 'normal' }}>{desc}</button>\r\n        </li>\r\n      );\r\n    })\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else if (current.squares.some(el => el == null)){\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    } else {\r\n      status = 'It\\'s a draw!';\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClickA={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>\r\n            <button onClick={this.handleClickOfSort}>\r\n              {accending ? \"Accending\" : \"Decending\"}\r\n            </button>\r\n          </div>\r\n          <div>{status}</div>\r\n          <ol>{accending ? moves : moves.reverse()}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return [a, b, c];\r\n    }\r\n  }\r\n  return [];\r\n}\r\n\r\n//class Clock extends React.Component {\r\n//  constructor(props) {\r\n//    super(props);\r\n//    this.state = { date: new Date() };\r\n//  }\r\n\r\n//  componentDidMount() {\r\n//    this.timerID = setInterval(\r\n//      () => this.tick(),\r\n//      1000\r\n//    );\r\n//  }\r\n\r\n//  componentWillUnmount() {\r\n//    clearInterval(this.timerID);\r\n//  }\r\n\r\n//  tick() {\r\n//    this.setState({\r\n//      date: new Date()\r\n//    });\r\n//  }\r\n\r\n//  render() {\r\n//    return (\r\n//      <div>\r\n//        <h1>Hello, world!</h1>\r\n//        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\r\n//      </div>\r\n//    );\r\n//  }\r\n//}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\n//ReactDOM.render(\r\n//  <Clock />,\r\n//  document.getElementById('root')\r\n//);"],"sourceRoot":""}